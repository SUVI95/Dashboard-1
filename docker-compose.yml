version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: duunijobs-postgres
    environment:
      POSTGRES_USER: duunijobs
      POSTGRES_PASSWORD: password123
      POSTGRES_DB: duunijobs_candidates
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U duunijobs"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: duunijobs-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: duunijobs-minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: duunijobs-backend
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://duunijobs:password123@postgres:5432/duunijobs_candidates?schema=public
      REDIS_HOST: redis
      REDIS_PORT: 6379
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY_ID: minioadmin
      S3_SECRET_ACCESS_KEY: minioadmin
      S3_BUCKET_NAME: duunijobs-cvs
      S3_REGION: us-east-1
      S3_USE_SSL: "false"
      JWT_SECRET: duunijobs-super-secret-jwt-key-change-in-production-2024
      JWT_REFRESH_SECRET: duunijobs-super-secret-refresh-key-change-in-production-2024
      FRONTEND_URL: http://localhost:3000
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm run start:dev

  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: duunijobs-frontend
    environment:
      REACT_APP_API_URL: http://localhost:3001/api
      REACT_APP_WS_URL: http://localhost:3001
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./src:/app/src
      - ./public:/app/public
      - /app/node_modules
    command: npm start

volumes:
  postgres_data:
  redis_data:
  minio_data:

